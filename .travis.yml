dist: xenial
sudo: required
language: java
jdk:
  - openjdk11

services:
  - docker

cache:
  directories:
    - $HOME/.m2

env:
  global:
    - VERSION_EDITION=Community

branches:
  only:
    - master
    - develop
    - feature/REPO-4735_Add-release-stages

stages:
  - name: test
    if: branch !=feature/REPO-4735_Add-release-stages
  - engineering release
  - company release
  
jobs:
  include:
    - stage: test
      name: "WhiteSource scan"
      # only on develop and if it is not a PR
      if: fork = false AND branch = develop AND type != pull_request
      install:
        - travis_retry travis_wait 30 mvn -q install "-Dversion.edition=${VERSION_EDITION}" -f war/pom.xml
      script:
        # Download the latest version of WhiteSource Unified Agent
        - curl -LJO https://github.com/whitesource/unified-agent-distribution/raw/master/standAlone/wss-unified-agent.jar
        # Run WhiteSource Unified Agent
        - java -jar wss-unified-agent.jar -apiKey ${WHITESOURCE_API_KEY} -c .wss-unified-agent.config -d ./war
    - name: "REST API TAS tests part1"
      jdk: openjdk11
      install:
        - travis_retry travis_wait 40 mvn install -q "-Dversion.edition=${VERSION_EDITION}" -Dmaven.javadoc.skip=true -PcommunityDocker
        - ./tests/scripts/start-compose.sh ./tests/environment/docker-compose-minimal+transforms.yml
        - ./tests/scripts/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 60 mvn install -f tests/tas-restapi/pom.xml -Pall-tas-tests,run-restapi-part1 -Denvironment=default -DrunBugs=false
    - name: "REST API TAS tests part2"
      jdk: openjdk11
      install:
        - travis_retry travis_wait 40 mvn install -q "-Dversion.edition=${VERSION_EDITION}" -Dmaven.javadoc.skip=true -PcommunityDocker
        - ./tests/scripts/start-compose.sh ./tests/environment/docker-compose-minimal+transforms.yml
        - ./tests/scripts/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 60 mvn install -f tests/tas-restapi/pom.xml -Pall-tas-tests,run-restapi-part2 -Denvironment=default -DrunBugs=false
    - name: "REST API TAS tests part3"
      jdk: openjdk11
      install:
        - travis_retry travis_wait 40 mvn install -q "-Dversion.edition=${VERSION_EDITION}" -Dmaven.javadoc.skip=true -PcommunityDocker
        - ./tests/scripts/start-compose.sh ./tests/environment/docker-compose-minimal+transforms.yml
        - ./tests/scripts/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 60 mvn install -f tests/tas-restapi/pom.xml -Pall-tas-tests,run-restapi-part3 -Denvironment=default -DrunBugs=false
    - name: "CMIS TAS tests"
      jdk: openjdk11
      install:
        - travis_retry travis_wait 40 mvn install -q "-Dversion.edition=${VERSION_EDITION}" -Dmaven.javadoc.skip=true -PcommunityDocker
        - ./tests/scripts/start-compose.sh ./tests/environment/docker-compose-minimal+transforms.yml
        - ./tests/scripts/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 40 mvn install -q -f tests/tas-cmis/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false
    - name: "Email TAS tests"
      jdk: openjdk11
      install:
        - travis_retry travis_wait 40 mvn install -q "-Dversion.edition=${VERSION_EDITION}" -Dmaven.javadoc.skip=true -PcommunityDocker
        - ./tests/scripts/start-compose.sh ./tests/environment/docker-compose-minimal.yml
        - ./tests/scripts/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 30 mvn install -q -f tests/tas-email/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false
    - name: "WebDAV TAS tests"
      jdk: openjdk11
      install:
        - travis_retry travis_wait 40 mvn install -q "-Dversion.edition=${VERSION_EDITION}" -Dmaven.javadoc.skip=true -PcommunityDocker
        - ./tests/scripts/start-compose.sh ./tests/environment/docker-compose-minimal.yml
        - ./tests/scripts/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 30 mvn install -q -f tests/tas-webdav/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false
    - name: "Integration TAS tests"
      jdk: openjdk11
      install:
        - travis_retry travis_wait 40 mvn install -q "-Dversion.edition=${VERSION_EDITION}" -Dmaven.javadoc.skip=true -PcommunityDocker
        - ./tests/scripts/start-compose.sh ./tests/environment/docker-compose-minimal.yml
        - ./tests/scripts/wait-for-alfresco-start.sh "http://localhost:8082/alfresco"
      script:
        - travis_wait 30 mvn install -q -f tests/tas-integration/pom.xml -Pall-tas-tests -Denvironment=default -DrunBugs=false
    - stage: engineering release
      # only on develop or master branch
      if: fork = false AND branch = feature/REPO-4735_Add-release-stages AND commit_message !~ /\[no-release\]/
      #TODO
      env: 
        - release_version=
        - development_version=
      before_install: ./scripts/travis/verifyReleaseTag.sh 
      name: "Maven release"
      install: skip  # Release command from bamboo
      # install: if [["${release_version}""=""]]; then exit -1 \
      #         else \
      #         mvn --batch-mode \ 
      #         -DreleaseVersion=${release.version} \ 
      #         -DdevelopmentVersion=${development.version}  \
      #         -Dbuild-number=${bamboo.buildNumber} \ 
      #         -Dbuild-key=${bamboo.buildKey} \ 
      #         -Dbuild-name="${bamboo.planName}" \ 
      #         -Dscm-path=${bamboo.planRepository.1.repositoryUrl} \ 
      #         "-Dversion.edition=${bamboo.version.edition}" \ 
      #         -DskipTests \ 
      #         "-Darguments=-DskipTests '-Dversion.edition=${bamboo.version.edition}' -Dbuild-number=${bamboo.buildNumber} -Dbuild-key=${bamboo.buildKey} '-Dbuild-name=${bamboo.planName}' -Dscm-path=${bamboo.planRepository.1.repositoryUrl} " \ 
      #         -Prelease \
      #         release:prepare release:perform \
              
      #         fi
      script:
        - travis_wait 30 echo "This is the Maven relase stage"
      # deploy:
      #   provider: s3
      #   access_key_id: ${AWS_ACCESS_KEY_ID}
      #   secret_access_key: ${AWS_SECRET_ACCESS_KEY}
      #   bucket: "alfresco-artefacts-staging/alfresco-content-services-community/$bamboo_stage/$branch_name/$build_number/"
      #   skip_cleanup: true
      #   local_dir: 

      # This stage could use a script to deploy to S3, as in bamboo, or the above stage can include a deploy section.
    - name: Push to S3 # TODO currently placeholder stage
      install: skip 
      script:
        - travis_wait 30 echo "This is the Push to S3 stage" 
    - stage: "company release"
      # only on master branch
      if: fork = false AND branch = feature/REPO-4735_Add-release-stages AND commit_message !~ /\[no-release\]/
      name: "Copy to S3 Release"
      install: skip
      script:
        - travis_wait 30 echo "This is the Copy to S3 Release stage" # As this is copying between S3 buckets a script will be required.